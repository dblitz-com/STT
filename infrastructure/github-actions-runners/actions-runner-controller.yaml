# Actions Runner Controller (ARC) Installation
# 
# This installs the actions-runner-controller which manages GitHub Actions self-hosted runners
# in Kubernetes. It automatically scales runners based on GitHub Actions queue.
#
# Prerequisites:
# 1. cert-manager must be installed (see cert-manager.yaml)
# 2. GitHub token must be provided in the secret below
#
# Apply with: kubectl apply -f actions-runner-controller.yaml

apiVersion: v1
kind: Namespace
metadata:
  name: actions-runner-system
  labels:
    name: actions-runner-system
---
# GitHub authentication secret
# The token needs the following permissions:
# - repo (for private repos)
# - admin:org (for organization-level runners)
# - admin:public_key (for SSH key management)
# - admin:repo_hook (for webhook management)
apiVersion: v1
kind: Secret
metadata:
  name: controller-manager
  namespace: actions-runner-system
type: Opaque
data:
  # Base64 encoded GitHub token - replace with actual token
  github_token: "REPLACE_WITH_BASE64_ENCODED_GITHUB_TOKEN"
---
# ARC Controller Manager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: actions-runner-system
  labels:
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/component: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: actions-runner-controller
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: actions-runner-controller
        app.kubernetes.io/component: controller-manager
    spec:
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: manager
        image: summerwind/actions-runner-controller:v0.27.5
        command:
        - /manager
        args:
        - --leader-elect
        - --sync-period=1m
        - --docker-image=summerwind/actions-runner:latest
        - --runner-group=default
        env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: controller-manager
              key: github_token
        - name: RUNNER_IMAGE
          value: "summerwind/actions-runner:latest"
        - name: DOCKER_IMAGE
          value: "summerwind/actions-runner:latest"
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health-probe
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health-probe
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health-probe
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      terminationGracePeriodSeconds: 10
---
# Service Account for ARC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller-manager
  namespace: actions-runner-system
---
# ClusterRole for ARC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: actions-runner-controller
rules:
- apiGroups: [""]
  resources: ["pods", "services", "services/finalizers", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["actions.summerwind.dev"]
  resources: ["*"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
---
# ClusterRoleBinding for ARC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: actions-runner-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: actions-runner-controller
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: actions-runner-system
---
# Service for webhooks
apiVersion: v1
kind: Service
metadata:
  name: webhook-service
  namespace: actions-runner-system
spec:
  ports:
  - name: webhook-server
    port: 443
    protocol: TCP
    targetPort: webhook-server
  selector:
    app.kubernetes.io/name: actions-runner-controller
    app.kubernetes.io/component: controller-manager
---
# Webhook configuration
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingAdmissionWebhook
metadata:
  name: actions-runner-controller-mutating-webhook-configuration
webhooks:
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: webhook-service
      namespace: actions-runner-system
      path: /mutate-actions-summerwind-dev-v1alpha1-runner
  failurePolicy: Fail
  name: mutation.runner.actions.summerwind.dev
  rules:
  - apiGroups: ["actions.summerwind.dev"]
    apiVersions: ["v1alpha1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["runners"]
  sideEffects: None
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: webhook-service
      namespace: actions-runner-system
      path: /mutate-actions-summerwind-dev-v1alpha1-runnerdeployment
  failurePolicy: Fail
  name: mutation.runnerdeployment.actions.summerwind.dev
  rules:
  - apiGroups: ["actions.summerwind.dev"]
    apiVersions: ["v1alpha1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["runnerdeployments"]
  sideEffects: None
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: webhook-service
      namespace: actions-runner-system
      path: /mutate-actions-summerwind-dev-v1alpha1-runnerreplicaset
  failurePolicy: Fail
  name: mutation.runnerreplicaset.actions.summerwind.dev
  rules:
  - apiGroups: ["actions.summerwind.dev"]
    apiVersions: ["v1alpha1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["runnerreplicasets"]
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: actions-runner-controller-validating-webhook-configuration
webhooks:
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: webhook-service
      namespace: actions-runner-system
      path: /validate-actions-summerwind-dev-v1alpha1-runner
  failurePolicy: Fail
  name: validation.runner.actions.summerwind.dev
  rules:
  - apiGroups: ["actions.summerwind.dev"]
    apiVersions: ["v1alpha1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["runners"]
  sideEffects: None
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: webhook-service
      namespace: actions-runner-system
      path: /validate-actions-summerwind-dev-v1alpha1-runnerdeployment
  failurePolicy: Fail
  name: validation.runnerdeployment.actions.summerwind.dev
  rules:
  - apiGroups: ["actions.summerwind.dev"]
    apiVersions: ["v1alpha1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["runnerdeployments"]
  sideEffects: None
- admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      name: webhook-service
      namespace: actions-runner-system
      path: /validate-actions-summerwind-dev-v1alpha1-runnerreplicaset
  failurePolicy: Fail
  name: validation.runnerreplicaset.actions.summerwind.dev
  rules:
  - apiGroups: ["actions.summerwind.dev"]
    apiVersions: ["v1alpha1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["runnerreplicasets"]
  sideEffects: None