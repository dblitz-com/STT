# ⭐ OPTION A - GITHUB ACTIONS INTEGRATION ⭐
# 
# PREFERRED SOLUTION: Uses GitHub Actions self-hosted runners
# 
# This webhook server triggers GitHub Actions workflows instead of creating Kubernetes Jobs.
# It provides proper GitHub Actions context and status comment formatting.
# 
# Prerequisites:
# - GitHub Actions self-hosted runners deployed (see infrastructure/github-actions-runners/)
# - Claude Code Action workflow configured in .github/workflows/claude-code.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-github-actions
  labels:
    app: webhook-github-actions
    version: github-actions
spec:
  replicas: 2  # Higher availability for webhook endpoint
  selector:
    matchLabels:
      app: webhook-github-actions
  template:
    metadata:
      labels:
        app: webhook-github-actions
        version: github-actions
    spec:
      serviceAccountName: webhook-github-actions
      containers:
      - name: webhook-github-actions
        image: 549574275832.dkr.ecr.us-east-1.amazonaws.com/webhook-server:latest # {\"$imagepolicy\": \"flux-system:webhook-server\"}
        command: ["bun", "/app/src/coding/entrypoints/webhook-github-actions-handler.ts"]
        ports:
        - containerPort: 9000
        env:
        - name: PORT
          value: "9000"
        - name: NODE_ENV
          value: "production"
        - name: TRIGGER_PHRASE
          value: "@claude"
        # GitHub Actions workflow configuration
        - name: CLAUDE_WORKFLOW_FILE
          value: "claude-code.yml"
        - name: CLAUDE_WORKFLOW_REF
          value: "main"
        # GitHub API configuration
        - name: GITHUB_API_URL
          value: "https://api.github.com"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-token-secret
              key: token
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: example-app-secrets
              key: webhook-secret
        # Tool configuration
        - name: ALLOWED_TOOLS
          value: "Edit,MultiEdit,Glob,Grep,LS,Read,Write,Bash,mcp__github_file_ops__commit_files,mcp__github_file_ops__delete_files,mcp__github_file_ops__update_claude_comment"
        - name: DISALLOWED_TOOLS
          value: ""
        - name: MAX_TURNS
          value: "10"
        - name: TIMEOUT_MINUTES
          value: "30"
        - name: SYSTEM_PROMPT
          value: ""
        - name: APPEND_SYSTEM_PROMPT
          value: ""
        - name: FALLBACK_MODEL
          value: ""
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-github-actions
  labels:
    app: webhook-github-actions
spec:
  selector:
    app: webhook-github-actions
  ports:
  - name: http
    port: 80
    targetPort: 9000
  type: LoadBalancer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: webhook-github-actions
---
# Minimal permissions - no Kubernetes Job creation needed
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: webhook-github-actions
rules:
# Only need to read secrets for authentication
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
# Optional: Allow reading pods for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: webhook-github-actions
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: webhook-github-actions
subjects:
- kind: ServiceAccount
  name: webhook-github-actions